CREATE DATABASE cantina;
DROP DATABASE cantina;


USE cantina;

SET foreign_key_checks=0;
DROP TABLE tb_pessoas;
DROP TABLE tb_pedidos;
DROP TABLE tb_pagamentos;
SET foreign_key_checks=1;

CREATE TABLE tb_pessoas (
	id_pessoa INT NOT NULL AUTO_INCREMENT,
    nome_pessoa VARCHAR (50),
	status_pessoa VARCHAR (1) DEFAULT 'A',
    CONSTRAINT PK_ID PRIMARY KEY (id_pessoa)
);

DELETE FROM tb_pessoas WHERE nome_pessoa = 'S';

SELECT * FROM tb_pessoas;

CREATE TABLE tb_pagamentos (
  id_pagamento INT NOT NULL AUTO_INCREMENT,
  id_pessoa INT NOT NULL,
  valor_pago DECIMAL(10,2),
  
  data_pagamento TIMESTAMP DEFAULT CURRENT_TIMESTAMP(),
  PRIMARY KEY (id_pagamento),
  FOREIGN KEY (id_pessoa) REFERENCES tb_pessoas(id_pessoa)
);

SELECT * FROM tb_pagamentos;

CREATE TABLE tb_pedidos (
  id_pedido INT NOT NULL AUTO_INCREMENT,
  id_pessoa INT NOT NULL,
  valor_pedido DECIMAL(10,2),
  info_pedidos VARCHAR(100),
  
  data_pedido TIMESTAMP DEFAULT CURRENT_TIMESTAMP(),
  PRIMARY KEY (id_pedido),
  FOREIGN KEY (id_pessoa) REFERENCES tb_pessoas(id_pessoa)
);

SELECT * FROM tb_pedidos;

DELETE FROM tb_pedidos WHERE id_pedido = '5'; 

INSERT INTO tb_pedidos (id_pessoa, valor_pedido, data_pedido, info_pedidos) VALUES (1,'3,00','2019-09-10', 'pirulito');

DROP FUNCTION total_pedido;
COMMIT;
# total valor pedido por pessoa


DELIMITER $
CREATE FUNCTION total_pedido(p_pessoa int) RETURNS decimal(10,2)

READS SQL DATA
DETERMINISTIC
BEGIN
	declare v_total decimal(10,2);    
    SELECT 
        coalesce(sum(tb_pedidos.valor_pedido),0) 
    FROM 
        tb_pedidos
    where 
        tb_pedidos.id_pessoa = p_pessoa
	INTO
    	v_total;
    RETURN v_total;    
END
$


# total valor pagamento por pessoa

DELIMITER $
CREATE FUNCTION total_pagamento(p_pessoa int) RETURNS decimal(10,2)

READS SQL DATA
DETERMINISTIC
BEGIN
	declare v_total decimal(10,2);    
    SELECT 
        coalesce(sum(tb_pagamentos.valor_pago),0) 
    FROM 
        tb_pagamentos 
    where 
        tb_pagamentos.id_pessoa = p_pessoa
	INTO
    	v_total;
    RETURN v_total;    
END
$


DELIMITER $
CREATE FUNCTION ultima_compra(p_pessoa INT) RETURNS TIMESTAMP

READS SQL DATA
DETERMINISTIC
BEGIN
	declare data_compra TIMESTAMP;    
    SELECT 
        max(tb_pedidos.data_pedido) data_pedido
    FROM 
        tb_pedidos
    where 
        tb_pedidos.id_pessoa = p_pessoa
	INTO
    	data_compra;
    RETURN data_compra;    
END
$

# Função para data do pedido
###########################################################################


DELIMITER $
CREATE FUNCTION ultimo_pagamento(p_pessoa INT) RETURNS TIMESTAMP

READS SQL DATA
DETERMINISTIC
BEGIN
	declare data_pagamento TIMESTAMP;    
    SELECT 
        max(tb_pagamentos.data_pagamento) data_pagamento
    FROM 
        tb_pagamentos
    where 
        tb_pagamentos.id_pessoa = p_pessoa
	INTO
    	data_pagamento;
    RETURN data_pagamento;    
END
$

# Função para data do pagamento
###########################################################################

SELECT DISTINCT
    tb_pessoas.id_pessoa, 
    tb_pessoas.nome_pessoa, 
    (SELECT ultima_compra(tb_pessoas.id_pessoa)) as ultima_compra,
    (SELECT ultimo_pagamento(tb_pessoas.id_pessoa)) as ultimo_pagamento,
    (SELECT total_pedido(tb_pessoas.id_pessoa)) as valor_pedido,    
    (SELECT total_pagamento(tb_pessoas.id_pessoa)) as valor_pago,
    (SELECT total_pagamento(tb_pessoas.id_pessoa)) - (SELECT total_pedido(tb_pessoas.id_pessoa)) as saldo 
FROM 
    tb_pessoas
//////////////////////////////////////////////////////////////////////////////////////////////////////////

CREATE TABLE tb_produtos(
	id_produto INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
	nome_produto VARCHAR(30),
	valor_produto VARCHAR(10),
	qnt_estoque INTEGER,
	obs_produto VARCHAR(50)
);

DROP TABLE tb_produtos;

CREATE TABLE tb_movimentacao(
	id_movimentacao INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
	id_produto INTEGER,
	tipo_movimentacao VARCHAR(1),
	qnt_produto INTEGER,
	CONSTRAINT fk_produto FOREIGN KEY (id_produto) REFERENCES tb_produtos(id_produto)
);

CREATE TABLE tb_itenspedido(
	id_itenspedido INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
	id_produto INTEGER,
	id_pedido INTEGER,
	CONSTRAINT fk_itens FOREIGN KEY (id_produto) REFERENCES tb_produtos(id_produto),
	CONSTRAINT fk_pedido FOREIGN KEY (id_pedido) REFERENCES tb_pedidos(id_pedido)
);